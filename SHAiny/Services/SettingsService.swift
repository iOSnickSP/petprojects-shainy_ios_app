//
//  SettingsService.swift
//  SHAiny
//
//  Created by –°–µ—Ä–≥–µ–π –í–∏—Ö–ª—è–µ–≤ on 26.10.2025.
//

import Foundation

class SettingsService {
    static let shared = SettingsService()
    
    private let userDefaults = UserDefaults.standard
    private let showEncryptedDataKey = "settings_showEncryptedData"
    private let serverURLKey = "settings_serverURL"
    
    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
    private let defaultServerURL = "http://192.168.1.128:3000/api"
    
    private init() {
        print("üîß SettingsService initialized with server URL: \(serverURL)")
    }
    
    /// URL —Å–µ—Ä–≤–µ—Ä–∞ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö)
    var serverURL: String {
        get {
            return userDefaults.string(forKey: serverURLKey) ?? defaultServerURL
        }
        set {
            userDefaults.set(newValue, forKey: serverURLKey)
            print("üîß Settings: serverURL changed to \(newValue)")
        }
    }
    
    /// WebSocket URL (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç http -> ws)
    var webSocketURL: String {
        let apiURL = serverURL
        // –£–±–∏—Ä–∞–µ–º /api –µ—Å–ª–∏ –µ—Å—Ç—å
        let baseURL = apiURL.replacingOccurrences(of: "/api", with: "")
        // –ó–∞–º–µ–Ω—è–µ–º http –Ω–∞ ws
        let wsURL = baseURL.replacingOccurrences(of: "http://", with: "ws://")
                           .replacingOccurrences(of: "https://", with: "wss://")
        return "\(wsURL)/ws"
    }
    
    /// –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
    var showEncryptedData: Bool {
        get {
            // –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º true (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
            if userDefaults.object(forKey: showEncryptedDataKey) == nil {
                return true
            }
            return userDefaults.bool(forKey: showEncryptedDataKey)
        }
        set {
            userDefaults.set(newValue, forKey: showEncryptedDataKey)
            print("üîß Settings: showEncryptedData = \(newValue)")
        }
    }
}

